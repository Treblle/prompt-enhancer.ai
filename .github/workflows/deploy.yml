name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install backend dependencies
        run: npm install
        
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
          cd ..
        
      - name: Create .env file
        run: |
          echo "NODE_ENV=production" > .env
          echo "PORT=5000" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRY=24h" >> .env
          echo "AI_PROVIDER=openai" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "CORS_ALLOWED_ORIGINS=https://prompt-enhancer.ai" >> .env
          echo "TREBLLE_API_KEY=${{ secrets.TREBLLE_API_KEY }}" >> .env
          echo "TREBLLE_PROJECT_ID=${{ secrets.TREBLLE_PROJECT_ID }}" >> .env
          
      - name: Create frontend environment file
        run: |
          cd frontend
          echo "REACT_APP_API_URL=/v1" > .env.production
          echo "REACT_APP_API_KEY=${{ secrets.API_KEY }}" >> .env.production
          cd ..
          
      - name: Run security checks
        run: npm run security-check
        
      - name: Generate API documentation
        run: npm run generate-docs

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod --confirm --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}